[{"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/index.js":"1","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/reportWebVitals.js":"2","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/App.js":"3","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Square.js":"4","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Game.js":"5","/home/nair/dev/tic-tac-toe/src/index.js":"6","/home/nair/dev/tic-tac-toe/src/App.js":"7","/home/nair/dev/tic-tac-toe/src/reportWebVitals.js":"8","/home/nair/dev/tic-tac-toe/src/components/Square.js":"9","/home/nair/dev/tic-tac-toe/src/components/Card/Card.js":"10","/home/nair/dev/tic-tac-toe/src/components/Game/Game.js":"11","/home/nair/dev/tic-tac-toe/src/components/Field/Field.js":"12","/home/nair/dev/tic-tac-toe/src/components/TestGame/Select.js":"13","/home/nair/dev/tic-tac-toe/src/Icons/Cross.js":"14","/home/nair/dev/tic-tac-toe/src/Icons/Zero.js":"15","/home/nair/dev/tic-tac-toe/src/Icons/Setting.js":"16","/home/nair/dev/tic-tac-toe/src/components/TestGame/GameSetting.js":"17","/home/nair/dev/tic-tac-toe/src/Icons/Radio.js":"18"},{"size":500,"mtime":1609598447872,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609507861177,"results":"21","hashOfConfig":"20"},{"size":166,"mtime":1609607054747,"results":"22","hashOfConfig":"20"},{"size":389,"mtime":1609601951239,"results":"23","hashOfConfig":"20"},{"size":2939,"mtime":1609609914373,"results":"24","hashOfConfig":"20"},{"size":500,"mtime":1609611943603,"results":"25","hashOfConfig":"26"},{"size":334,"mtime":1611050198340,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1609611943603,"results":"28","hashOfConfig":"26"},{"size":625,"mtime":1611050474154,"results":"29","hashOfConfig":"26"},{"size":358,"mtime":1610369482034,"results":"30","hashOfConfig":"26"},{"size":2660,"mtime":1611049673944,"results":"31","hashOfConfig":"26"},{"size":1325,"mtime":1610446648857,"results":"32","hashOfConfig":"26"},{"size":3410,"mtime":1611049369160,"results":"33","hashOfConfig":"26"},{"size":1019,"mtime":1611036303209,"results":"34","hashOfConfig":"26"},{"size":1055,"mtime":1611036219019,"results":"35","hashOfConfig":"26"},{"size":1046,"mtime":1611045747770,"results":"36","hashOfConfig":"26"},{"size":1604,"mtime":1611050101737,"results":"37","hashOfConfig":"26"},{"size":1045,"mtime":1611045803967,"results":"38","hashOfConfig":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1j8t2up",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9dgu8p",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/index.js",[],["82","83"],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/reportWebVitals.js",[],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/App.js",[],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Square.js",[],["84","85"],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Game.js",["86"],"import React, {useEffect, useState} from 'react';\nimport Square from \"./Square\";\nimport './style.css'\n\nconst clearState = [];\n\nfunction Game() {\n    const [gameState, updateGameState] = useState(clearState)\n    const [turn, updateTurn] = useState(false)\n\n    const handleOnClick = (index) => {\n        let strings = Array.from(gameState);\n        if (strings[index])\n            return;\n        strings[index] = turn ? \"X\" : \"0\";\n        updateTurn(!turn)\n        updateGameState(strings)\n    }\n\n    const clearGame = () => {\n        updateGameState(clearState)\n    }\n     //eslint-disable-next-line\n    useEffect(() => {\n        let winner = checkWinner();\n        if (winner) {\n            clearGame();\n            console.log(winner)\n            alert(`Player ${winner} won this round`)\n        }\n    }, [gameState])\n\n    const checkWinner = () => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n                return gameState[a];\n            }\n        }\n        return null;\n    }\n\n    return (\n        <div className=\"app-header\">\n          {/* <img src =\"https://careerninja.in/wp-content/uploads/2019/02/Logo-unit-_-white-BG-copy-1.png\" height=\"80px\" width=\"120px\" /> */}\n            <p className=\"heading-text\">\n              <span className =\"apptext-1\">Career</span>\n              <span className =\"apptext-2\">Ninja</span> - Assignment 2</p>\n            <div className=\"row jc-center\">\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(0)} state={gameState[0]}/>\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(1)} state={gameState[1]}/>\n                <Square className=\"b-bottom\" onClick={() => handleOnClick(2)} state={gameState[2]}/>\n            </div>\n            <div className=\"row jc-center\">\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(3)} state={gameState[3]}/>\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(4)} state={gameState[4]}/>\n                <Square className=\"b-bottom\" onClick={() => handleOnClick(5)} state={gameState[5]}/>\n            </div>\n            <div className=\"row jc-center\">\n                <Square className=\"b-right\" onClick={() => handleOnClick(6)} state={gameState[6]}/>\n                <Square className=\"b-right\" onClick={() => handleOnClick(7)} state={gameState[7]}/>\n                <Square onClick={() => handleOnClick(8)} state={gameState[8]}/>\n            </div>\n            <button className=\"clear-button\" onClick={clearGame}>Reset</button>\n        </div>\n    );\n}\n\nexport default Game;\n","/home/nair/dev/tic-tac-toe/src/index.js",[],["87","88"],"/home/nair/dev/tic-tac-toe/src/App.js",["89","90"],"import './App.css';\nimport Select from './components/TestGame/Select';\nimport Game from './components/Game/Game'\nimport GameSetting from './components/TestGame/GameSetting'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <GameSetting/> */}\n     <Game />\n     {/* <Select/> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/nair/dev/tic-tac-toe/src/reportWebVitals.js",[],"/home/nair/dev/tic-tac-toe/src/components/Square.js",[],"/home/nair/dev/tic-tac-toe/src/components/Card/Card.js",[],"/home/nair/dev/tic-tac-toe/src/components/Game/Game.js",["91"],"import React, {useEffect, useState} from 'react';\nimport Card from '../Card/Card'\nimport Select from '../TestGame/Select'\nimport GameSetting from '../TestGame/GameSetting'\nimport './Game.css'\n\nconst clearState = [];\n\nfunction Game(){\n\n    const [gameState, updateGameState] = useState(clearState)\n    const [turn, updateTurn] = useState(false)\n    const [xUserScore, setXUserScore] = useState(0);\n    const [yUserScore, setYUserScore] = useState(0);\n\n    const player1 = 'Alex';\n    const player2 = 'AI';\n\n    const handleOnClick = (index) => {\n        let strings = Array.from(gameState);\n        if (strings[index])\n            return;\n        strings[index] = turn ? \"X\" : \"O\";\n        updateTurn(!turn)\n        updateGameState(strings)\n    }\n\n    const clearGame = () => {\n        updateGameState(clearState);\n    }\n\n     //eslint-disable-next-line\n    useEffect(() => {\n        let winner = checkWinner();\n        if (winner) {\n            clearGame();\n            winner ==='X'? setXUserScore(xUserScore+1):setYUserScore(yUserScore+1)\n            console.log('winner',winner)\n            alert(`Player ${winner} won this round`)\n        }\n    }, [gameState])\n\n    const checkWinner = () => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n                return gameState[a];\n            }\n        }\n        return null;\n    }\n\n    return(\n        <div className=\"game\">\n            <Select/>\n            {/* <p className=\"heading-text\">\n              <span className =\"apptext-1\">Career</span>\n              <span className =\"apptext-2\">Ninja</span> - Assignment 2\n            </p> */}\n            <span className='scorecard'>\n                <span className='score' >{player1? player1 :'X won'}  </span>\n                <span className='scorecard__shadow'>\n                <span className='color1'>{xUserScore}</span> - <span className='color2'>{yUserScore}</span>\n                </span>\n                <span className='score'>{player2? player2 :'Y won'}</span>\n            </span>\n            <Card handleOnClick ={handleOnClick} gameState={gameState}/>\n            <span className=\"setting__icon\" onClick={clearGame}> <GameSetting/></span>\n           \n            {/* <button className=\"clear-button\" onClick={clearGame}><Setting/></button> */}\n        </div>\n    )\n}\n\nexport default Game;","/home/nair/dev/tic-tac-toe/src/components/Field/Field.js",[],"/home/nair/dev/tic-tac-toe/src/components/TestGame/Select.js",["92"],"import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal'\nimport Cross from '../../Icons/Cross'\nimport Zero from '../../Icons/Zero'\nimport Radio from '../../Icons/Radio'\nimport {MdRadioButtonChecked} from 'react-icons/md'\nimport {MdRadioButtonUnchecked} from 'react-icons/md'\nimport './select.css'\nimport GameSetting from './GameSetting';\n\nconst customStyles = {\n    content : {\n      top         : '50%',\n      left        : '50%',\n      right       : 'auto',\n      bottom      : 'auto',\n      marginRight : '-50%',\n      transform   : 'translate(-50%, -50%)',\n      width       : '100vw',\n      height      : '100vh',\n      border      : 'none'\n    }\n  };\n\nModal.setAppElement('#root')\n\nfunction Select (){\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [selectIsOpen, setSelectIsOpen] = useState(false);\n  const [activeOn, setActiveOn] = useState(false);\n  // const [playerChoose, setPlayerChoose ] = useState(false);\n\n//   const [inSet,setInSet] = useState(false);\n\nconst handleClick = () => {\n    setActiveOn(!(activeOn));\n    // playerChoose(true);\n  }\n\n  useEffect(() => {\n    setIsOpen(true)\n}, [])\n \n  const nextmodal =()=>{\n    setIsOpen(false);\n    setSelectIsOpen(true);\n\n  }\n\n  const enterGame=()=>{\n    setSelectIsOpen(false);\n\n  }\n\n    return(\n        <span className='select'>\n        <Modal\n          closeTimeoutMS={200}\n          isOpen={modalIsOpen}\n        //   onAfterOpen={afterOpenModal}\n        //   onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Select Type\"\n        >\n        <span className='model__container'>\n            <span className='model__icon'>\n                <Cross/>\n                <Zero/>\n            </span>\n            <span className='model__type'>Choose your play mode</span>\n            <span className='model__type1' onClick={nextmodal} >With AI</span>\n            <span className='model__type2' onClick={nextmodal} >With a friend</span>\n            <span className='model__gamesetting'><GameSetting /></span>  \n        </span>\n          \n        </Modal>\n        <span className='pickside'>\n        <Modal\n          closeTimeoutMS={200}\n          isOpen={selectIsOpen}\n        //   onAfterOpen={afterOpenModal}\n        //   onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Pick side\"\n        >\n        <span className='pickside__container'>\n          <span className='pickside__option'>\n\n          <span className='pickside__option1' onClick={handleClick} style={!(activeOn)? {opacity:1}:{opacity:0.5}}>\n            <span className='cross__icon'><Cross setSize={80}/></span>\n            <span className='option1'>\n              {!(activeOn)?<MdRadioButtonChecked style={{color:'aqua'}} size={30}/>:\n              <MdRadioButtonUnchecked size={30}/>}</span>\n          </span>\n\n          <span className='pickside__option2' onClick={handleClick} style={(activeOn)? {opacity:1}:{opacity:0.5}}>\n            <span className='zero__icon'><Zero setSize={100}/></span>\n            <span className='option2'>\n              {activeOn?<MdRadioButtonChecked style={{color:'aqua'}} size={30}/>:\n              <MdRadioButtonUnchecked size={30}/>}</span>\n          </span>\n          </span>\n\n          <span className='pickside__button' onClick ={enterGame}>Continue</span>\n        </span>\n        </Modal>\n        </span>\n        </span>\n    )\n}\n\nexport default Select;","/home/nair/dev/tic-tac-toe/src/Icons/Cross.js",[],"/home/nair/dev/tic-tac-toe/src/Icons/Zero.js",[],"/home/nair/dev/tic-tac-toe/src/Icons/Setting.js",[],"/home/nair/dev/tic-tac-toe/src/components/TestGame/GameSetting.js",[],"/home/nair/dev/tic-tac-toe/src/Icons/Radio.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":31,"column":8,"nodeType":"101","endLine":31,"endColumn":19,"suggestions":"102"},{"ruleId":"93","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"110","line":41,"column":8,"nodeType":"101","endLine":41,"endColumn":19,"suggestions":"111"},{"ruleId":"105","severity":1,"message":"112","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkWinner'. Either include it or remove the dependency array.","ArrayExpression",["115"],["113"],["114"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'GameSetting' is defined but never used.","React Hook useEffect has missing dependencies: 'checkWinner', 'xUserScore', and 'yUserScore'. Either include them or remove the dependency array. You can also do a functional update 'setXUserScore(x => ...)' if you only need 'xUserScore' in the 'setXUserScore' call.",["116"],"'Radio' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [checkWinner, gameState]",{"range":"121","text":"122"},"Update the dependencies array to be: [checkWinner, gameState, xUserScore, yUserScore]",{"range":"123","text":"124"},[807,818],"[checkWinner, gameState]",[1152,1163],"[checkWinner, gameState, xUserScore, yUserScore]"]