[{"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/index.js":"1","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/reportWebVitals.js":"2","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/App.js":"3","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Square.js":"4","/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Game.js":"5","/home/nair/dev/tic-tac-toe/src/index.js":"6","/home/nair/dev/tic-tac-toe/src/App.js":"7","/home/nair/dev/tic-tac-toe/src/reportWebVitals.js":"8","/home/nair/dev/tic-tac-toe/src/components/Square.js":"9","/home/nair/dev/tic-tac-toe/src/components/Card/Card.js":"10","/home/nair/dev/tic-tac-toe/src/components/Game/Game.js":"11","/home/nair/dev/tic-tac-toe/src/components/Field/Field.js":"12"},{"size":500,"mtime":1609598447872,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609507861177,"results":"15","hashOfConfig":"14"},{"size":166,"mtime":1609607054747,"results":"16","hashOfConfig":"14"},{"size":389,"mtime":1609601951239,"results":"17","hashOfConfig":"14"},{"size":2939,"mtime":1609609914373,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1609611943603,"results":"19","hashOfConfig":"20"},{"size":170,"mtime":1610369153070,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609611943603,"results":"22","hashOfConfig":"20"},{"size":389,"mtime":1610369913746,"results":"23","hashOfConfig":"20"},{"size":358,"mtime":1610369482034,"results":"24","hashOfConfig":"20"},{"size":2311,"mtime":1610373340062,"results":"25","hashOfConfig":"20"},{"size":1351,"mtime":1610369507581,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1j8t2up",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9dgu8p",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/index.js",[],["57","58"],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/reportWebVitals.js",[],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/App.js",[],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Square.js",[],["59","60"],"/home/nair/dev/Tic-Tac-Toe-application/frontend/src/components/Game.js",["61"],"import React, {useEffect, useState} from 'react';\nimport Square from \"./Square\";\nimport './style.css'\n\nconst clearState = [];\n\nfunction Game() {\n    const [gameState, updateGameState] = useState(clearState)\n    const [turn, updateTurn] = useState(false)\n\n    const handleOnClick = (index) => {\n        let strings = Array.from(gameState);\n        if (strings[index])\n            return;\n        strings[index] = turn ? \"X\" : \"0\";\n        updateTurn(!turn)\n        updateGameState(strings)\n    }\n\n    const clearGame = () => {\n        updateGameState(clearState)\n    }\n     //eslint-disable-next-line\n    useEffect(() => {\n        let winner = checkWinner();\n        if (winner) {\n            clearGame();\n            console.log(winner)\n            alert(`Player ${winner} won this round`)\n        }\n    }, [gameState])\n\n    const checkWinner = () => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n                return gameState[a];\n            }\n        }\n        return null;\n    }\n\n    return (\n        <div className=\"app-header\">\n          {/* <img src =\"https://careerninja.in/wp-content/uploads/2019/02/Logo-unit-_-white-BG-copy-1.png\" height=\"80px\" width=\"120px\" /> */}\n            <p className=\"heading-text\">\n              <span className =\"apptext-1\">Career</span>\n              <span className =\"apptext-2\">Ninja</span> - Assignment 2</p>\n            <div className=\"row jc-center\">\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(0)} state={gameState[0]}/>\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(1)} state={gameState[1]}/>\n                <Square className=\"b-bottom\" onClick={() => handleOnClick(2)} state={gameState[2]}/>\n            </div>\n            <div className=\"row jc-center\">\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(3)} state={gameState[3]}/>\n                <Square className=\"b-bottom-right\" onClick={() => handleOnClick(4)} state={gameState[4]}/>\n                <Square className=\"b-bottom\" onClick={() => handleOnClick(5)} state={gameState[5]}/>\n            </div>\n            <div className=\"row jc-center\">\n                <Square className=\"b-right\" onClick={() => handleOnClick(6)} state={gameState[6]}/>\n                <Square className=\"b-right\" onClick={() => handleOnClick(7)} state={gameState[7]}/>\n                <Square onClick={() => handleOnClick(8)} state={gameState[8]}/>\n            </div>\n            <button className=\"clear-button\" onClick={clearGame}>Reset</button>\n        </div>\n    );\n}\n\nexport default Game;\n","/home/nair/dev/tic-tac-toe/src/index.js",[],["62","63"],"/home/nair/dev/tic-tac-toe/src/App.js",[],"/home/nair/dev/tic-tac-toe/src/reportWebVitals.js",[],"/home/nair/dev/tic-tac-toe/src/components/Square.js",[],["64","65"],"/home/nair/dev/tic-tac-toe/src/components/Card/Card.js",[],"/home/nair/dev/tic-tac-toe/src/components/Game/Game.js",["66"],"import React, {useEffect, useState} from 'react';\nimport Card from '../Card/Card'\nimport './Game.css'\n\nconst clearState = [];\n\nfunction Game(){\n\n    const [gameState, updateGameState] = useState(clearState)\n    const [turn, updateTurn] = useState(false)\n    const [xUserWon, setXUserWon] = useState(0);\n    const [yUserWon, setYUserWon] = useState(0);\n\n    const handleOnClick = (index) => {\n        let strings = Array.from(gameState);\n        if (strings[index])\n            return;\n        strings[index] = turn ? \"X\" : \"O\";\n        updateTurn(!turn)\n        updateGameState(strings)\n    }\n\n    const clearGame = () => {\n        updateGameState(clearState);\n    }\n\n     //eslint-disable-next-line\n    useEffect(() => {\n        let winner = checkWinner();\n        if (winner) {\n            clearGame();\n            winner ==='X'? setXUserWon(xUserWon+1):setYUserWon(yUserWon+1)\n            console.log('winner',winner)\n            alert(`Player ${winner} won this round`)\n        }\n    }, [gameState])\n\n    const checkWinner = () => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n                return gameState[a];\n            }\n        }\n        return null;\n    }\n\n    return(\n        <div className=\"game\">\n            <p className=\"heading-text\">\n              <span className =\"apptext-1\">Career</span>\n              <span className =\"apptext-2\">Ninja</span> - Assignment 2\n            </p>\n            <span className='scorecard'>\n                <span className='score' >X won  </span>\n                <span className='scorecard__shadow'>\n                <span className='color1'>{xUserWon}</span> - <span className='color2'>{yUserWon}</span>\n                </span>\n                <span className='score'>  Y won</span>\n            </span>\n            <Card handleOnClick ={handleOnClick} gameState={gameState}/>\n            <button className=\"clear-button\" onClick={clearGame}>Reset</button>\n        </div>\n    )\n}\n\nexport default Game;","/home/nair/dev/tic-tac-toe/src/components/Field/Field.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":31,"column":8,"nodeType":"75","endLine":31,"endColumn":19,"suggestions":"76"},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":36,"column":8,"nodeType":"75","endLine":36,"endColumn":19,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],["83"],["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkWinner'. Either include it or remove the dependency array.","ArrayExpression",["85"],["83"],["84"],["83"],["84"],"React Hook useEffect has missing dependencies: 'checkWinner', 'xUserWon', and 'yUserWon'. Either include them or remove the dependency array. You can also do a functional update 'setXUserWon(x => ...)' if you only need 'xUserWon' in the 'setXUserWon' call.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [checkWinner, gameState]",{"range":"91","text":"92"},"Update the dependencies array to be: [checkWinner, gameState, xUserWon, yUserWon]",{"range":"93","text":"94"},[807,818],"[checkWinner, gameState]",[991,1002],"[checkWinner, gameState, xUserWon, yUserWon]"]